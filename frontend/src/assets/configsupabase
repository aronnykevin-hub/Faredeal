
import { createClient } from '@supabase/supabase-js'

const supabaseUrl = import.meta.env.VITE_SUPABASE_URL
const supabaseKey = import.meta.env.VITE_SUPABASE_ANON_KEY

if (!supabaseUrl || !supabaseKey) {
  throw new Error('Missing Supabase environment variables. Make sure VITE_SUPABASE_URL and VITE_SUPABASE_ANON_KEY are set in .env file')
}

const supabase = createClient(supabaseUrl, supabaseKey)

// Test connection function
export const testConnection = async () => {
  try {
    // Try to query a non-existent table to test connection
    const { error } = await supabase.from('_connection_test').select('*').limit(1)
    
    // If we get error codes PGRST116 or PGRST205, it means connection is working but table doesn't exist (which is expected)
    if (error && (error.code === 'PGRST116' || error.code === 'PGRST205')) {
      console.log('✅ Supabase connected successfully! (Table not found error is expected)')
      return true
    }
    
    // If we get other errors, there might be a real connection issue
    if (error) {
      console.error('❌ Supabase connection error:', error)
      return false
    }
    
    // If no error at all, connection is definitely working
    console.log('✅ Supabase connected successfully!')
    return true
  } catch (err) {
    console.error('❌ Supabase connection failed:', err)
    return false
  }
}

export default supabase